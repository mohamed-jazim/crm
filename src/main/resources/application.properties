# Database connection properties
spring.datasource.url=jdbc:postgresql://dpg-cmgc6oo21fec739pc400-a.oregon-postgres.render.com/ns_qam6
spring.datasource.username=ns_qam6_user
spring.datasource.password=vINjyuQdWPcP6MIaMxbWx69IRb26zSG6
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always

# OAuth2 Google Client Registration
spring.security.oauth2.client.registration.google.client-id=195804320130-unfq2ud7gngt0ckm4v03rj6gmnuhddc5.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=https://crm-c65z.onrender.com/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
# Customize the login page URL to include access_type=offline
spring.security.oauth2.client.registration.google.authorization-uri-template=https://accounts.google.com/o/oauth2/auth?access_type=offline&response_type=code&client_id={clientId}&scope={scopes}&state={state}&redirect_uri={redirectUri}

# Weather API Configuration
weather.api.url=http://api.weatherapi.com/v1/current.json
weather.api.key=2f1793689bd54627bba140830231811

# Application Configuration
app.base-url=https://crm-c65z.onrender.com/  # Update the base URL to use HTTPS

# Company Information
company.name=Easy to Build
